# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: INTEGRAÇÃO CONTINUA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Inicia banco de dados 
      run: docker compose up -d postgres

    - name: Lint 
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.64
        args: controllers/ database/ models/ routes/

    - name: Verifica containers ativos
      run: docker ps -a


    - name: Debug - Verificar variáveis de ambiente
      run: echo "DB_HOST=${{ secrets.DB_HOST }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }}"

    - name: Testa conexão com o banco
      run: | 
        PGPASSWORD=${{ secrets.DB_PASSWORD }} pg_isready -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -p 5432


    - name: Testa a aplicação
      run: DB_HOST=${{ secrets.DB_HOST }} DB_USER=${{ secrets.DB_USER }}  DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }} go test -v main_test.go
    